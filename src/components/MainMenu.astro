---
interface Props {
    linksText?: string;
    navLinks?: { href: string, isBlank: boolean, label: string }[];
}
const {linksText = '', navLinks = []} = Astro.props;
import '../styles/styles.css';
const at_svg = '<svg viewBox="0 0 3002 1211" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="Group-copy"><path id="Path" fill="#000000" stroke="none" d="M 1.110779 982.461243 C 150.836227 656.746826 300.26947 332.635132 452.567902 2.309326 C 598.850952 333.153381 742.729126 658.558411 888.361511 987.931091 C 876.613708 987.931091 868.421753 987.945129 860.229797 987.928894 C 806.035645 987.822144 751.835938 987.253296 697.651306 987.922119 C 684.306274 988.086487 678.372986 983.760132 673.270142 971.369507 C 600.134583 793.787415 526.372375 616.463318 452.686096 439.108276 C 451.726929 436.7995 449.795746 434.89447 446.599579 430.366028 C 364.38797 617.387512 283.028381 802.470825 201.561356 987.798462 C 136.186279 987.798462 71.429749 987.830872 6.674002 987.641357 C 4.718756 987.635742 2.770227 985.308594 1.110779 982.461243 Z"/><path id="path1" fill="#000000" stroke="none" d="M 2337.043457 318.256226 C 2339.752441 309.848267 2342.01123 302.979065 2344.574707 295.183472 C 2399.870605 295.183472 2454.910156 295.183472 2511.671875 295.183472 C 2490.02124 355.450623 2468.296875 414.121765 2447.826416 473.227478 C 2371.366943 693.992493 2295.202881 914.859924 2219.419922 1135.857788 C 2215.125 1148.382813 2209.099121 1155.431396 2196.338135 1159.325439 C 2143.555176 1175.433105 2091.054443 1192.465942 2035.341309 1210.145386 C 2052.037109 1157.990967 2067.646729 1109.250244 2083.241943 1060.504761 C 2089.880127 1039.75708 2095.265137 1018.503113 2103.436035 998.378662 C 2112.644775 975.696838 2111.314209 954.867981 2103.76416 931.672241 C 2037.175659 727.091187 1971.616577 522.175049 1905.761353 317.35553 C 1903.569946 310.539612 1901.462036 303.697021 1898.310425 293.669434 C 1918.473145 293.669434 1936.571533 293.672791 1954.669678 293.668701 C 1988.372559 293.661194 2022.085571 294.119629 2055.772705 293.388123 C 2067.771484 293.127686 2072.550049 296.931641 2075.828125 308.869873 C 2114.794678 450.785034 2154.471191 592.505615 2193.988037 734.269775 C 2195.037354 738.034058 2196.382324 741.715759 2199.066162 749.987 C 2204.051758 743.144653 2208.625488 739.294678 2210.097168 734.493896 C 2252.452881 596.319519 2294.498047 458.0495 2337.043457 318.256226 Z"/><path id="path2" fill="#000000" stroke="none" d="M 1864.061523 335.228333 C 1865.223389 341.103394 1867.057251 346.810242 1865.178589 350.743958 C 1848.999512 384.62616 1832.150635 418.188416 1814.552246 453.765076 C 1807.049438 450.087891 1800.703003 447.141541 1794.503906 443.913147 C 1750.744385 421.126282 1704.011597 411.153137 1654.934204 412.606934 C 1641.872437 412.993774 1628.472656 414.888611 1615.968018 418.591187 C 1587.059448 427.150452 1570.917847 446.061218 1569.441284 471.347839 C 1567.819702 499.114685 1583.604004 516.784607 1606.975952 526.365356 C 1649.049561 543.611755 1692.119141 558.417603 1734.660645 574.538391 C 1748.839355 579.911682 1762.779419 585.953491 1776.650635 592.092407 C 1849.924194 624.519836 1890.317383 680.405884 1894.609375 760.738159 C 1900.005615 861.730713 1864.092651 942.132202 1768.622192 975.257019 C 1729.48877 988.834961 1686.108521 994.208435 1644.416992 995.507813 C 1566.365112 997.940308 1490.512939 983.016541 1419.496704 948.855225 C 1380.426392 930.061157 1380.626587 929.451843 1400.624756 891.818909 C 1415.726318 863.400269 1431.047729 835.098511 1444.406372 810.218018 C 1489.590942 826.093323 1531.417358 844.929565 1575.262085 854.810669 C 1607.18335 862.004272 1642.236206 861.09967 1675.035645 856.980042 C 1708.406494 852.788757 1726.35791 830.129944 1729.19458 802.26416 C 1732.078247 773.940613 1719.056885 749.285522 1688.643677 736.191223 C 1652.979614 720.83606 1615.714111 709.21228 1579.205811 695.799988 C 1563.112793 689.888123 1546.794312 684.388489 1531.227661 677.279663 C 1438.338501 634.858521 1402.239624 574.971191 1407.574219 473.220703 C 1412.098145 386.939819 1461.598511 321.196838 1544.048584 295.527954 C 1569.030762 287.750061 1595.516602 283.222534 1621.637085 280.989807 C 1689.093384 275.223877 1754.842407 284.946045 1817.839966 310.030762 C 1833.609985 316.310303 1847.99231 326.074829 1864.061523 335.228333 Z"/><path id="path3" fill="#000000" stroke="none" d="M 2678.256836 287.211975 C 2775.702393 270.140137 2868.056396 281.446533 2956.584473 321.730042 C 2982.147217 333.362061 2982.21167 335.021606 2969.904053 359.615234 C 2954.322754 390.750061 2938.48584 421.756409 2922.225586 453.871582 C 2874.41626 428.41864 2825.659668 412.470459 2773.103516 412.940063 C 2753.612549 413.114319 2733.55835 416.069885 2714.853271 421.511902 C 2692.089355 428.135193 2679.141357 445.546143 2676.896973 469.716614 C 2674.674072 493.656677 2685.380859 511.63092 2706.398438 521.057495 C 2738.226563 535.332275 2771.161133 547.135193 2803.587891 560.083252 C 2831.752197 571.329651 2860.447998 581.456726 2887.886475 594.267578 C 2962.261963 628.992371 2999.635986 688.616577 3001.049805 770.280396 C 3002.492432 853.597961 2978.644531 925.905151 2899.086914 965.378296 C 2867.960449 980.822021 2831.767578 990.280762 2797.056152 993.468262 C 2699.338867 1002.441162 2604.729004 987.485474 2516.565674 941.792358 C 2490.884033 928.482666 2491.253906 927.778442 2504.236328 902.014282 C 2520.226074 870.281738 2536.208496 838.54541 2553.29834 804.618164 C 2561.474365 808.970215 2568.263184 812.485352 2574.96167 816.16449 C 2635.924072 849.646606 2700.364258 868.397827 2770.592529 861.290161 C 2820.953857 856.193604 2849.596436 818.73999 2836.46167 776.281372 C 2830.085205 755.66864 2815.202393 742.525696 2796.319824 735.137268 C 2757.649658 720.006775 2718.337646 706.511414 2679.252686 692.447205 C 2639.902832 678.287842 2602.742676 660.550354 2570.228516 633.358948 C 2477.979248 556.211487 2490.089844 351.337524 2640.596436 298.315552 C 2652.405029 294.155457 2664.595947 291.080566 2678.256836 287.211975 Z"/><path id="path4" fill="#000000" stroke="none" d="M 1150.451416 780.866455 C 1151.623779 790.530518 1152.451782 798.425049 1153.946655 806.190857 C 1159.920776 837.227417 1175.872437 853.149658 1207.796265 853.900024 C 1233.356934 854.500366 1259.041626 850.476318 1284.645752 848.216248 C 1294.389526 847.356445 1304.062012 845.691772 1314.343506 844.316895 C 1324.778198 881.762939 1335.122681 917.746033 1344.428345 953.995605 C 1345.387817 957.733276 1341.169556 965.999146 1337.641357 967.221069 C 1255.075439 995.821533 1171.543457 1012.178101 1085.950195 980.2677 C 1032.151367 960.21051 1001.897583 919.440186 992.583435 864.150879 C 987.344543 833.052368 985.490234 801.089905 985.26355 769.493896 C 984.491211 661.766968 985.118408 554.029541 985.210144 446.296265 C 985.216187 439.095215 985.210876 431.89386 985.210876 422.431702 C 940.740173 422.431702 897.481384 422.431702 853.425842 422.431702 C 853.425842 378.132446 853.425842 336.120361 853.425842 293.110229 C 897.072083 293.110229 939.842529 293.110229 985.128479 293.110229 C 985.128479 273.922546 985.142273 255.633423 985.125427 237.344299 C 985.093262 202.315186 984.618103 167.275635 985.438782 132.266602 C 985.568909 126.718384 990.253967 118.20874 994.953003 116.307617 C 1044.996216 96.059937 1095.467896 76.870483 1148.414429 56.386841 C 1148.414429 135.568359 1148.414429 212.998047 1148.414429 292.501709 C 1210.423096 292.501709 1270.190918 292.501709 1331.686157 292.501709 C 1331.686157 336.534729 1331.686157 378.504456 1331.686157 421.854919 C 1272.330322 421.854919 1212.358521 421.854919 1150.413574 421.854919 C 1150.413574 541.808838 1150.413574 660.423279 1150.451416 780.866455 Z"/></g></svg>';
---
<nav class="main-menu">
    <div class="marquee-container">
        <div class="marquee-wrapper">
            <div class="marquee-animation" set:html={[at_svg,at_svg].join('')}></div>
        </div>
    </div>
    <div class="nav-trap"></div>
    <div class="nav-inner">
        <div class="nav-items">
            {
                navLinks.map(i => {
                    return (
                        <span>
                            <a href={i.href} class="nav-item" target={i.isBlank ? '_blank' : '_self'}>
                                <span class="nav-item-cont">
                                    <span class="font-bold">{i.label}</span>
                                    <span class="nav-item-arrow">
                                        <svg viewBox="0 0 24 24" fill="#FFFFFF" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.7071 4.29289C16.0976 4.68342 16.0976 5.31658 15.7071 5.70711L9.41421 12L15.7071 18.2929C16.0976 18.6834 16.0976 19.3166 15.7071 19.7071C15.3166 20.0976 14.6834 20.0976 14.2929 19.7071L7.29289 12.7071C7.10536 12.5196 7 12.2652 7 12C7 11.7348 7.10536 11.4804 7.29289 11.2929L14.2929 4.29289C14.6834 3.90237 15.3166 3.90237 15.7071 4.29289Z" fill="#000000"/></svg>
                                    </span>
                                </span>
                            </a>
                        </span>
                    )
                })
            }
        </div>
        <div class="nav-blocks">
            <div class="nav-item">
                <div class="nav-links">
                    <div class="nav-overline">{linksText}</div>
                    <a href="#" class="nav-social-item">Facebook</a>
                    <a href="#" class="nav-social-item">Instagram</a>
                    <a href="#" class="nav-social-item">LinkedIn</a>
                </div>
            </div>
        </div>
    </div>
    <script>
        function Marquee(selector: string, speed: number) {
            const parentSelector = document.querySelector(selector) as HTMLElement;
            const clone = parentSelector.innerHTML;
            const firstElement = parentSelector.children[0] as HTMLElement;
            let i = 0;
            //let marqueeInterval: any;

            parentSelector.insertAdjacentHTML('beforeend', clone);
            parentSelector.insertAdjacentHTML('beforeend', clone);

            function startMarquee() {
                setInterval(function () {
                    firstElement.style.marginLeft = `-${i}px`;
                    if (i > firstElement.clientWidth) {
                        i = 0;
                    }
                    i = i + speed;
                }, 0);
            }

            /*
            function stopMarquee() {
                clearInterval(marqueeInterval);
            }
            */

            //parentSelector.addEventListener('mouseenter', stopMarquee);
            //parentSelector.addEventListener('mouseleave', startMarquee);

            startMarquee();
        }

        window.addEventListener('load', () => Marquee('.marquee-animation', 0.4));
    </script>
</nav>
